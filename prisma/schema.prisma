// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//字典表
model Dict {
  id          Int     @id @default(autoincrement())
  name        String?
  type        String?
  sort        Int?
  status      Int?
  description String?
}

// 字典值表
model DictValue {
  id          Int     @id @default(autoincrement())
  name        String?
  code        String  @unique
  type        String?
  value       Json?
  sort        Int?
  status      Int?
  description String?
}

// 菜单表
model Menu {
  id          Int        @id @default(autoincrement())
  name        String?
  type        Int
  isShow      Int
  isLink      Int
  icon        String?
  path        String?
  component   String?
  permission  String?
  sort        Int
  parentId    Int?
  parent      Menu?      @relation("menuTree", fields: [parentId], references: [id])
  children    Menu[]     @relation("menuTree")
  status      Int
  isKeepAlive Int
  role        RoleMenu[]
}

model Role {
  id   Int        @id @default(autoincrement())
  name String?
  menu RoleMenu[]
}

model RoleMenu {
  id     Int   @id @default(autoincrement())
  roleId Int?
  role   Role? @relation(fields: [roleId], references: [id])
  menuId Int?
  menu   Menu? @relation(fields: [menuId], references: [id])
}

// 用户
model User {
  id        Int        @id @default(autoincrement())
  username  String     @unique
  password  String
  avatar    String?
  sex       Int?
  isActive  Int?
  email     String?    @unique
  info      String?
  status    Int        @default(0)
  isErp     Boolean    @default(false)
  templates Template[]
  regTime   DateTime   @default(now())
  cTime     DateTime   @default(now())
  uTime     DateTime?  @default(now()) @updatedAt
  Page      Page[]
}

model Categorie {
  id    Int       @id @default(autoincrement())
  name  String
  cTime DateTime  @default(now())
  uTime DateTime? @default(now()) @updatedAt
  tag   Tag[]
}

model Tag {
  id                Int                 @id @default(autoincrement())
  name              String
  categorieId       Int?
  categorie         Categorie?          @relation(fields: [categorieId], references: [id])
  description       String?
  widget            Widget[]
  cTime             DateTime            @default(now())
  uTime             DateTime?           @default(now()) @updatedAt
  CategorieOnWidget CategorieOnWidget[]
}

model Widget {
  id                Int                 @id @default(autoincrement())
  enName            String              @unique
  name              String
  thumbnail         String
  categories        Tag[]
  online            Int                 @default(0)
  onlineTime        DateTime?
  readonly          Boolean                @default(false)
  description       String?
  versions          WidgetVersion[]
  cTime             DateTime            @default(now())
  uTime             DateTime?           @default(now()) @updatedAt
  CategorieOnWidget CategorieOnWidget[]
}

model WidgetVersion {
  id           Int       @id @default(autoincrement())
  widgetId     Int?
  widget       Widget?   @relation(fields: [widgetId], references: [id])
  version      String
  previewLink  String?
  assets       Json?
  dependencies Json?
  schema       Json?
  mock         Json?
  thumbnail    String
  source       Json?
  cTime        DateTime  @default(now())
  uTime        DateTime? @default(now()) @updatedAt
}

model CategorieOnWidget {
  categorie   Tag      @relation(fields: [categorieId], references: [id])
  categorieId Int
  widget      Widget   @relation(fields: [widgetId], references: [id])
  widgetId    Int
  cTime       DateTime @default(now())

  @@id([categorieId, widgetId])
}

model Template {
  id            Int       @id @default(autoincrement())
  description   String?
  enName        String    @unique
  name          String
  thumbnail     String?
  thumbnailList Json?
  userId        Int?
  meta          Json?
  user          User?     @relation(fields: [userId], references: [id])
  pages         Page[]
  build         Build[]
  cTime         DateTime  @default(now())
  uTime         DateTime? @default(now()) @updatedAt
}

model Page {

  id          Int       @id @default(autoincrement())
  description String?
  enName      String    @unique
  clientType  String
  name        String
  path        String?
  thumbnail   String?
  code        String?
  css         String?
  dataSource  Json?
  meta        Json? //{title  description  keyword} tdk
  root        Boolean   @default(false)
  widget      Json?
  userId      Int?
  user        User?     @relation(fields: [userId], references: [id])
  templateId  Int?
  template    Template? @relation(fields: [templateId], references: [id])
  cTime       DateTime  @default(now())
  uTime       DateTime? @default(now()) @updatedAt
}


model DataSource {
  id          Int       @id @default(autoincrement())
  type        Int
  name        String
  enName      String
  description String?
  prodOrigin  String?
  preOrigin   String?
  path        String?
  method      String?
  url         String?
  params      Json?
  headers     Json?
  cTime       DateTime  @default(now())
  uTime       DateTime? @default(now()) @updatedAt
}
model ImageCategorie {
  id          Int       @id @default(autoincrement())
  name        String
//  group       Int
  description String?
  cTime       DateTime  @default(now())
  uTime       DateTime? @default(now()) @updatedAt
}
model Image {
  id        Int       @id @default(autoincrement())
  type      Int
  name      String?
  ext       String?
  url       String?
  mime_type String?
  imageName String?
  size      Json?
  cTime     DateTime  @default(now())
  uTime     DateTime? @default(now()) @updatedAt
}

model Build {
  id           Int       @id @default(autoincrement())
  jobLog       String?
  duration     Int       @default(0)
  downloadLink String?
  previewLink  String?
  templateId   Int?
  template     Template? @relation(fields: [templateId], references: [id])
  status       Int       @default(0)
  endTime      DateTime?
  sTime        DateTime?
  cTime        DateTime  @default(now())
  uTime        DateTime? @default(now()) @updatedAt
}

model Release {
  id      Int       @id @default(autoincrement())
  buildId Int
  env     String?
  status  Int       @default(0)
  version String?
  cTime   DateTime  @default(now())
  uTime   DateTime? @default(now()) @updatedAt
}

// 国际化翻译中心
model Translate {
  id           Int              @id @default(autoincrement())
  name         String?
  description  String?
  sourceLangId Int
  sourceLang   TranslateLang    @relation(fields: [sourceLangId], references: [id])
  targetLang   TranslateLang[]  @relation("TranslateOrLang")
  space        TranslateSpace[]
  cTime        DateTime         @default(now())
  uTime        DateTime?        @default(now()) @updatedAt

}

// 语言表
model TranslateLang {
  id        Int         @id @default(autoincrement())
  name      String?
  lang      String?
  translate Translate[] @relation("TranslateOrLang")
  cTime     DateTime    @default(now())
  uTime     DateTime?   @default(now()) @updatedAt
  texts      TranslateLangText[]
  Translate Translate[]
}

model TranslateSpace {
  id          Int                   @id @default(autoincrement())
  name        String?
  translateId Int?
  //symbol      String?
 // status    Int
  translate   Translate?            @relation(fields: [translateId], references: [id])
  sourceTexts TranslateSourceText[]
  texts       TranslateLangText[]
  description String?
  cTime       DateTime              @default(now())
  uTime       DateTime?             @default(now()) @updatedAt
}

model TranslateSourceText {
  id            Int                 @id @default(autoincrement())
  spaceId       Int?
  space         TranslateSpace?     @relation(fields: [spaceId], references: [id])
  key           String?
  sourceText    String?
  notes         String?
  maxLength     Int?
  translateText TranslateLangText[]
  cTime         DateTime            @default(now())
  uTime         DateTime?           @default(now()) @updatedAt
}

model TranslateLangText {
  id            Int                  @id @default(autoincrement())
  spaceId       Int?
  space         TranslateSpace?      @relation(fields: [spaceId], references: [id])
  sourceTextId  Int
  sourceText    TranslateSourceText? @relation(fields: [sourceTextId], references: [id])
  langId    Int?
  translateLang   TranslateLang?            @relation(fields: [langId], references: [id])
  translateText String?
  cTime         DateTime             @default(now())
  uTime         DateTime?            @default(now()) @updatedAt
}
